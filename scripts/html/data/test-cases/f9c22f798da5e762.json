{
  "uid" : "f9c22f798da5e762",
  "name" : "政策管理模块功能点测试",
  "fullName" : "scripts.test02_KnowledgeBase.TestKnowledgeBase#test_add_KnowledgeBase_0_ProjectTesting",
  "historyId" : "0a9c9f7d1d2f3aedc4a09123fe9f6210",
  "time" : {
    "start" : 1608864102342,
    "stop" : 1608864134501,
    "duration" : 32159
  },
  "description" : "此条用例针对知识库模块下政策管理模块的增删改查测试",
  "descriptionHtml" : "<p>此条用例针对知识库模块下政策管理模块的增删改查测试</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "a = (<test02_KnowledgeBase.TestKnowledgeBase object at 0x000001727C0090A0>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\nC:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest02_KnowledgeBase.py:43: in test_add_KnowledgeBase\n    self.kb.page_knowledgebase_one(title, source)\n..\\page\\page_knowledgebase.py:172: in page_knowledgebase_one\n    self.page_cim()\n..\\page\\page_knowledgebase.py:15: in page_cim\n    self.base_click(page.currency_cim)\n..\\base\\base.py:27: in base_click\n    self.base_find(loc).click()\n..\\base\\base.py:20: in base_find\n    return WebDriverWait(self.driver,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0361a9f15b2e1af4fa6adc99ff204466\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x000001727C0AD8B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_Class__pytest_setup_class",
    "time" : {
      "start" : 1608864093379,
      "stop" : 1608864102340,
      "duration" : 8961
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "输入用户名",
      "time" : {
        "start" : 1608864099846,
        "stop" : 1608864099958,
        "duration" : 112
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "username",
        "value" : "'admin'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "输入密码",
      "time" : {
        "start" : 1608864099958,
        "stop" : 1608864100079,
        "duration" : 121
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "pwd",
        "value" : "'tydt_123456'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 2,
    "hasContent" : true
  } ],
  "testStage" : {
    "description" : "此条用例针对知识库模块下政策管理模块的增删改查测试",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "a = (<test02_KnowledgeBase.TestKnowledgeBase object at 0x000001727C0090A0>,)\n\n    @wraps(func)\n    def standalone_func(*a):\n>       return func(*(a + p.args), **p.kwargs)\n\nC:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\parameterized\\parameterized.py:530: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ntest02_KnowledgeBase.py:43: in test_add_KnowledgeBase\n    self.kb.page_knowledgebase_one(title, source)\n..\\page\\page_knowledgebase.py:172: in page_knowledgebase_one\n    self.page_cim()\n..\\page\\page_knowledgebase.py:15: in page_cim\n    self.base_click(page.currency_cim)\n..\\base\\base.py:27: in base_click\n    self.base_find(loc).click()\n..\\base\\base.py:20: in base_find\n    return WebDriverWait(self.driver,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0361a9f15b2e1af4fa6adc99ff204466\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x000001727C0AD8B0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击CIM跳转至绿色数字城市CIM基础平台",
      "time" : {
        "start" : 1608864102343,
        "stop" : 1608864134498,
        "duration" : 32155
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"C:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"F:\\cim\\page\\page_knowledgebase.py\", line 15, in page_cim\n    self.base_click(page.currency_cim)\n  File \"F:\\cim\\base\\base.py\", line 27, in base_click\n    self.base_find(loc).click()\n  File \"F:\\cim\\base\\base.py\", line 20, in base_find\n    return WebDriverWait(self.driver,\n  File \"C:\\Users\\GUO\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "d75a53f111d3acd4",
      "name" : "log",
      "source" : "d75a53f111d3acd4.txt",
      "type" : "text/plain",
      "size" : 1547
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "_Class__pytest_setup_class::0",
    "time" : {
      "start" : 1608864134549,
      "stop" : 1608864136744,
      "duration" : 2195
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "绿色数字城市CIM基础平台"
  }, {
    "name" : "story",
    "value" : "知识库"
  }, {
    "name" : "parentSuite",
    "value" : "scripts"
  }, {
    "name" : "suite",
    "value" : "test02_KnowledgeBase"
  }, {
    "name" : "subSuite",
    "value" : "TestKnowledgeBase"
  }, {
    "name" : "host",
    "value" : "Gxl"
  }, {
    "name" : "thread",
    "value" : "12200-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "scripts.test02_KnowledgeBase"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "f9c22f798da5e762.json",
  "parameterValues" : [ ]
}